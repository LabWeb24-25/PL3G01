@{
    ViewData["Title"] = "Pesquisa";
    var cgeneros = ViewData["generos"] as List<biblioon.Models.Genero>;
    var cautores = ViewData["autores"] as List<biblioon.Models.Autor>;
    var ceditores = ViewData["editores"] as List<biblioon.Models.Editor>;
    var resultados = ViewData["resultados"] as List<biblioon.Models.EdiLivro>;
    var currentPage = ViewData["currentPage"] as int? ?? 1;
    var totalPages = ViewData["totalPages"] as int? ?? 1;
}

<div class="containerPesquisa" style="display:flex;">
    <div class="barralateralpesquisa" style="width:250px;padding:10px;background-color:#f4f4f4;">

        <div class="XdeXresultados"> @ViewData["textoresultados"]</div>

        <div class="pageCounter">
            <button onclick="changePage(-1)" @if (currentPage == 1){<text>disabled</text>}>&lt
            </button>
            <span>Página @currentPage de @totalPages</span>
            <button onclick="changePage(1)" @if (currentPage == totalPages){<text>disabled</text>}>&gt</button>
        </div>


        <div class="seletorOrdenarPor">
            <label for="sort">Ordenar por:</label>
            <select id="sort" onchange="updateSortQueryString()">
                <option value="popular">Mais requisitados</option>
                <option value="popular-inv" >Menos requisitados</option>
                <option value="alpha-az" >Alfabeticamente (A-Z)</option>
                <option value="alpha-za" >Alfabeticamente (Z-A)</option>
                <option value="data-desc" >Mais recente para mais antigo</option>
                <option value="data-asc" >Mais antigo para mais recente</option>
            </select>
        </div>


	    <div class="seletorNresultados">
            <label for="npp">Resultados por página:</label>
		    <select id="npp" onchange="updateNPPQueryString()">
			    <option value="15">15</option>
			    <option value="30">30</option>
                <option value="60">60</option>
			    <option value="90">90</option>
		    </select>
	    </div>

        <div class="filtros">

            <label>Filtros</label>
            <button onclick="updateFilterQueryString()">Aplicar filtros</button>


            @if (cgeneros != null && cgeneros.Count > 0)
            {
                <div class="filtro seletorGeneros">
                    <label>Géneros</label>
                    @foreach (var g in cgeneros)
                    {
                        <div class="filter-option">
                            <input type="checkbox" id="@g.GeneroId">
                        <label for="@g.GeneroId.">@g.Nome</label>
                    </div>
                    }
                </div>
            }

            @if (cautores != null && cautores.Count > 0)
            {
                <div class="filtro seletorAutores">
                    <label>Autores</label>
                    @foreach (var a in cautores)
                    {
                        <div class="filter-option">
                            <input type="checkbox" id="@a.Id">
                        <label for="@a.Id">@a.Nome</label>
                    </div>
                    }
                </div>
            }

            @if (ceditores != null && ceditores.Count > 0)
            {
                <div class="filtro seletorEditores">
                    <label>Editores</label>

                    @foreach (var e in ceditores)
                    {
                        <div class="filter-option">
                            <input type="checkbox" id="@e.Id">
                        <label for="@e.Id">@e.Nome</label>
                    </div>
                    }
                </div>
            }

        </div>

    </div>

    <div class="resultados row6">

        @if (resultados == null || !resultados.Any())
        {
            <p>&lt; sem livros &gt</p>
        }
        else
        {
            @foreach (var livro in resultados)
            {
                <div class="grid-book">
                    <div>
                        <a href="@Url.Action("Livro", "Home", new { id = livro.Isbn })" class="bookcover">
                            <div>
                                <img width="175" src="@(!string.IsNullOrEmpty(livro.Capa) ? livro.Capa : "/images/placeholder.svg")">
                            </div>
                        </a>
                    </div>
                    <div>
                        <a href="@Url.Action("Livro", "Home", new { id = livro.Isbn })" class="bookproperty1">
                            @livro.Titulo
                        </a>
                    </div>
                    <div>
                        @{
                            var autorNames = livro.Autores.Select(a => $"<a class=\"bookproperty2\" href=\"/home/autor/{a.Id}\">{a.Nome}</a>");
                                @Html.Raw(string.Join(", ", autorNames))
                        }
                    </div>
                </div>
            }
        }


    </div>
</div>

<script>
    function changePage(direction) {
        var url = new URL(window.location.href);
        var currentPage = parseInt(url.searchParams.get('np')) || 1;
        var newPage = currentPage + direction;
        url.searchParams.set('np', newPage);
        window.location.href = url.toString();
    }

    function updateSortQueryString() {
        var select = document.getElementById("sort");
        var selectedValue = select.value;
        var url = new URL(window.location.href);
        url.searchParams.set('sort', selectedValue);
        window.location.href = url.toString();
    }

    function updateNPPQueryString() {
        var select = document.getElementById("npp");
        var selectedValue = select.value;
        var url = new URL(window.location.href);
        url.searchParams.set('npp', selectedValue);
        window.location.href = url.toString();
    }

    function updateFilterQueryString() {
        var url = new URL(window.location.href);
        var generos = document.querySelectorAll('.seletorGeneros input:checked');
        var autores = document.querySelectorAll('.seletorAutores input:checked');
        var editores = document.querySelectorAll('.seletorEditores input:checked');

        var generosIds = Array.from(generos).map(g => g.id);
        var autoresIds = Array.from(autores).map(a => a.id);
        var editoresIds = Array.from(editores).map(e => e.id);

        url.searchParams.set('generos', generosIds.join(';'));
        url.searchParams.set('autores', autoresIds.join(';'));
        url.searchParams.set('editores', editoresIds.join(';'));

        window.location.href = url.toString();
    }


    function setSortSelection() {
        var url = new URL(window.location.href);
        var sortValue = url.searchParams.get('sort');
        if (sortValue) {
            var select = document.getElementById("sort");
            select.value = sortValue;
        }
    }

    function setNPPSelection() {
        var url = new URL(window.location.href);
        var resultsValue = url.searchParams.get('npp');
        if (resultsValue) {
            var select = document.getElementById("npp");
            select.value = resultsValue;
        }
    }

    function setFiltrosSelection() {
        var url = new URL(window.location.href);
        var generos = url.searchParams.get('generos');
        var autores = url.searchParams.get('autores');
        var editores = url.searchParams.get('editores');

        if (generos) {
            var generosIds = generos.split(';');
            generosIds.forEach(id => {
                var input = document.getElementById(id);
                if (input) {
                    input.checked = true;
                }
            });
        }

        if (autores) {
            var autoresIds = autores.split(';');
            autoresIds.forEach(id => {
                var input = document.getElementById(id);
                if (input) {
                    input.checked = true;
                }
            });
        }

        if (editores) {
            var editoresIds = editores.split(';');
            editoresIds.forEach(id => {
                var input = document.getElementById(id);
                if (input) {
                    input.checked = true;
                }
            });
        }
    
    }

    document.addEventListener("DOMContentLoaded", setSortSelection);
    document.addEventListener("DOMContentLoaded", setNPPSelection);
    document.addEventListener("DOMContentLoaded", setFiltrosSelection);
</script>